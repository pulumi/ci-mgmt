on:
  pull_request:
    branches:
      - master
env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
jobs:
  lint:
    name: Run actionlint and shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          repo: pulumi/pulumictl
      - name: lint providers
        run: cd provider-ci && make lint-providers
      - name: lint workflows
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color
        shell: bash
  test:
    name: Verify against testdata
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          repo: pulumi/pulumictl
      - name: Checkout Scripts Repo
        uses: actions/checkout@v4
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Validate native-providers
        run: cd native-provider-ci && make all
      - name: Validate that our test workflows match checked in workflows
        run: cd provider-ci && make test-workflow-generation
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean

  deploy:
    uses: ./.github/workflows/update-workflows.yml
    secrets: inherit
    with:
      bridged: true
      provider_name: xyz
      automerge: false
      downstream_test: true
      caller_workflow: "update-workflows-single-bridged-provider"

  downstream:
    name: Test xyz
    timeout-minutes: 240
    runs-on: ubuntu-latest
    needs: deploy
    env:
      GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
    strategy:
      fail-fast: false
    steps:
      - name: Await PR opened for pulumi-xyz
        run: |
          echo Await PR opened for pulumi-xyz
          until gh search prs --repo pulumi/pulumi-xyz --match body "This PR was automatically generated by the update-workflows-single-bridged-provider  workflow in the pulumi/ci-mgmt repo, from commit ${{ github.sha }}."  --json url | grep url; do sleep 30; done;
      - name: Await PR codegen tests succeed.
        run: |
          echo "Await PR opened for pulumi-xyz"
          # Ensure that expected checks are pending before checking the status passes.
          # We use 'test' as all workflows have tests.
          until gh pr checks --repo "pulumi/pulumi-xyz" | grep 'test'; do sleep 30; done;
          gh pr checks --repo "pulumi/pulumi-xyz" --watch --fail-fast