# Generates a PR for the files in provider-ci/providers/* to the corresponding
# Pulumi provider. Note that this workflow does not generate any files -
# workflows must already be generated and committed to this repo when this
# workflow is run.
name: Update GH workflows, single bridged provider
"on":
  workflow_dispatch:
    inputs:
      provider_name:
        description: The name of the provider to deploy - do not include the pulumi prefix in the name.
        required: true
        type: string
      automerge:
        description: Mark created PRs for auto-merging?
        required: true
        type: boolean
        default: false
env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Clone ci-mgmt
        uses: actions/checkout@v2
        with:
          path: ci-mgmt
      - name: Clone pulumi-${{ github.event.inputs.provider_name }}
        uses: actions/checkout@v2
        with:
          repository: pulumi/pulumi-${{ github.event.inputs.provider_name }}
          path: pulumi-${{ github.event.inputs.provider_name }}
      - name: Delete existing workflows
        run: rm pulumi-${{ github.event.inputs.provider_name }}/.github/workflows/*.yml
      - name: Copy files from ci-mgmt to pulumi-${{ github.event.inputs.provider_name }}
        run: |
          cp -r ci-mgmt/provider-ci/providers/${{ github.event.inputs.provider_name }}/repo/. pulumi-${{ github.event.inputs.provider_name }}/.
      - name: Unshallow clone for tags
        run: |
          DIR="$PWD/pulumi-${{ github.event.inputs.provider_name }}"
          cd "$DIR"
          git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: stable
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Run source code migrations
        run: |
          DIR="$PWD/pulumi-${{ github.event.inputs.provider_name }}"
          cd ci-mgmt/tools/sourcemigrator
          npm ci
          npx ts-node index.ts "$DIR"
      - name: Close obsolete PRs started by this workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PULUMI_BOT_TOKEN }}
          script: |
            const regex = /Update GitHub Actions workflows/i;
            const octokit = github.rest;
            const repo = 'pulumi-${{ github.event.inputs.provider_name }}'
            console.log('Checking ' + repo);
            const { data: pullRequests } = await octokit.pulls.list({
              owner: 'pulumi',
              repo: repo,
              state: 'open',
            });
            for (const pullRequest of pullRequests) {
              if (regex.test(pullRequest.title)) {
                console.log('Closing obsolete PR ' + pullRequest.number);
                await octokit.pulls.update({
                  owner: 'pulumi',
                  repo: repo,
                  pull_number: pullRequest.number,
                  state: 'closed',
                });
              }
            }
      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          author: Pulumi Bot <bot@pulumi.com>
          body: "This PR was automatically generated by the deploy-single-provider workflow in the pulumi/ci-mgmt repo, from commit ${{ github.sha }}."
          branch: "update-github-actions-workflows-${{ github.run_number }}"
          committer: Pulumi Bot <bot@pulumi.com>
          commit-message: "[internal] Update GitHub Actions workflow files"
          labels: "impact/no-changelog-required"
          title: "Update GitHub Actions workflows."
          path: pulumi-${{ github.event.inputs.provider_name }}
          token: ${{ secrets.PULUMI_BOT_TOKEN }}
      - name: test
        run: echo ${{ github.repository }}
      - name: Set PR to auto-merge
        if: steps.create-pr.outputs.pull-request-operation == 'created' && github.event.inputs.automerge == 'true'
        run: "gh pr merge --auto --squash ${{ steps.create-pr.outputs.pull-request-url }}"
