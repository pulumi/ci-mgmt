name: update-workflows

on:
  workflow_call:
    inputs:
      provider_name:
        required: true
        type: string
        description: "The short provider name, example aws for pulumi-aws, gcp for pulumi-gcp"
      caller_workflow:
        required: true
        type: string
        description: "The name of the caller workflow to label the generated PR with."
      automerge:
        description: "Mark created PRs for auto-merging?"
        required: true
        type: boolean
        default: false
      bridged:
        description: "Whether the provider is bridged or native"
        type: boolean
        default: false
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}

jobs:
  update_workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: stable
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Clone ci-mgmt
        uses: actions/checkout@v2
        with:
          path: ci-mgmt
      - name: Clone pulumi-${{ inputs.provider_name }}
        uses: actions/checkout@v2
        with:
          repository: pulumi/pulumi-${{ inputs.provider_name }}
          path: pulumi-${{ inputs.provider_name }}
      - name: Unshallow clone for tags
        run: |
          DIR="$PWD/pulumi-${{ inputs.provider_name }}"
          cd "$DIR"
          git fetch --prune --unshallow --tags
      - name: Initialize submodule in pulumi-${{ inputs.provider_name }}
        run: cd pulumi-${{ inputs.provider_name }} && make upstream && cd ..
        continue-on-error: true
      - name: Delete existing workflows
        # Bridged providers completely replace workflow files from ci-mgmt currently.
        if: inputs.bridged
        run: rm pulumi-${{ inputs.provider_name }}/.github/workflows/*.yml
      - name: Delete existing workflows
        # Curiously, native providers do not wipe all the workflows currently. This is a bit suspect and needs revisiting.
        if: ${{ inputs.bridged != true }}
        run: |
          rm pulumi-${{ inputs.provider_name }}/.github/workflows/cleanup-artifacts.yml || echo "not found"
          rm pulumi-${{ inputs.provider_name }}/.github/workflows/pull_request.yml || echo "not found"
          rm pulumi-${{ inputs.provider_name }}/.github/workflows/master.yml || echo "not found"
      - name: Migrate config.yaml from ci-mgmt to the host repo
        if: inputs.bridged
        run: |
          if ! [ -f pulumi-${{ inputs.provider_name }}/.ci-mgmt.yaml ]; then
          	cp ci-mgmt/provider-ci/providers/${{ inputs.provider_name }}/config.yaml pulumi-${{ inputs.provider_name }}/.ci-mgmt.yaml
          else
          	echo "No migration necessary"
          fi
      - name: Generate workflow files into pulumi-${{ inputs.provider_name }}
        if: inputs.bridged
        run: |
          cd ci-mgmt/provider-ci && go run ./... generate \
          	--name pulumi/pulumi-${{ inputs.provider_name }} \
                --template bridged-provider \
                --config ../../pulumi-${{ inputs.provider_name }}/.ci-mgmt.yaml \
                --out ../../pulumi-${{ inputs.provider_name }}
      - name: Copy files from ci-mgmt to pulumi-${{ inputs.provider_name }}
        if: ${{ inputs.bridged != true }}
        run: |
          cp -r ci-mgmt/native-provider-ci/providers/${{ inputs.provider_name }}/repo/. pulumi-${{ inputs.provider_name }}/.
      - name: Run source code migrations
        run: |
          DIR="$PWD/pulumi-${{ inputs.provider_name }}"
          cd ci-mgmt/tools/sourcemigrator
          npm ci
          npx ts-node index.ts "$DIR"
      - name: Close obsolete PRs started by this workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PULUMI_BOT_TOKEN }}
          script: |
            const regex = /Update GitHub Actions workflows/i;
            const octokit = github.rest;
            const repo = 'pulumi-${{ inputs.provider_name }}'
            console.log('Checking ' + repo);
            const { data: pullRequests } = await octokit.pulls.list({
              owner: 'pulumi',
              repo: repo,
              state: 'open',
            });
            for (const pullRequest of pullRequests) {
              if (regex.test(pullRequest.title)) {
                console.log('Closing obsolete PR ' + pullRequest.number);
                await octokit.pulls.update({
                  owner: 'pulumi',
                  repo: repo,
                  pull_number: pullRequest.number,
                  state: 'closed',
                });
              }
            }
      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          author: Pulumi Bot <bot@pulumi.com>
          body: "This PR was automatically generated by the ${{ inputs.caller_workflow }} workflow in the pulumi/ci-mgmt repo, from commit ${{ github.sha }}."
          branch: "update-github-actions-workflows-${{ github.run_number }}"
          committer: Pulumi Bot <bot@pulumi.com>
          commit-message: "[internal] Update GitHub Actions workflow files"
          labels: "impact/no-changelog-required"
          title: "Update GitHub Actions workflows."
          path: pulumi-${{ inputs.provider_name }}
          token: ${{ secrets.PULUMI_BOT_TOKEN }}
      - name: Set PR to auto-merge
        if: steps.create-pr.outputs.pull-request-operation == 'created' && inputs.automerge == 'true'
        run: "gh pr merge --auto --squash ${{ steps.create-pr.outputs.pull-request-url }}"
      # See: https://docs.github.com/en/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits
      - name: Sleep to prevent hitting secondary rate limits
        run: sleep 1
