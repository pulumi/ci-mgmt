permissions: write-all # Equivalent to default permissions plus id-token: write
name: update-workflows

on:
  workflow_call:
    inputs:
      provider_name:
        required: true
        type: string
        description: "The short provider name, example aws for pulumi-aws, gcp for pulumi-gcp"
      caller_workflow:
        required: true
        type: string
        description: "The name of the caller workflow to label the generated PR with."
      automerge:
        description: "Mark created PRs for auto-merging?"
        required: true
        type: boolean
      downstream_test:
        description: "Whether the upgrade is a downstream test"
        type: boolean
        default: false
      skip_closing_prs:
        description: "Whether to skip closing PRs"
        type: boolean
        default: false
    outputs:
      pull_request_created:
        value: ${{ jobs.update_workflows.outputs.pull_request_created }}
        description: "Whether a PR was created"

env:
  ESC_ACTION_OIDC_AUTH: true
  ESC_ACTION_OIDC_ORGANIZATION: pulumi
  ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:organization
  ESC_ACTION_ENVIRONMENT: github-secrets/pulumi-ci-mgmt
  ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: GITHUB_TOKEN=PULUMI_BOT_TOKEN

jobs:
  update_workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@cf5b30703ffd5ad60cc3a880c09b3a9592b9372d # v1
      - name: Clone pulumi-${{ inputs.provider_name }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          repository: pulumi/pulumi-${{ inputs.provider_name }}
          path: pulumi-${{ inputs.provider_name }}
          token: ${{ steps.esc-secrets.outputs.PULUMI_BOT_TOKEN }}
      - name: Get Go version to install
        id: go-version
        run: |
          # Use the default value of "stable" if the .ci-mgmt.yaml file does not exist.
          if [ ! -f pulumi-${{ inputs.provider_name }}/.ci-mgmt.yaml ]; then
            echo "go-version=stable" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Get the .toolVersions.go field from the .ci-mgmt.yaml file if it exists.
          GO_VERSION="$(yq '.toolVersions.go' pulumi-${{ inputs.provider_name }}/.ci-mgmt.yaml)"
          # If the field is equal to "null", set it to "stable".
          if [ "$GO_VERSION" = "null" ]; then
            GO_VERSION="stable"
          fi
          echo "go-version=$GO_VERSION" >> "$GITHUB_OUTPUT"
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: ${{ steps.go-version.outputs.go-version }}
      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: 3.9
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@6096f2a2bbfee498ced520b6922ac2c06e990ed2 # v2.1.0
        with:
          repo: pulumi/pulumictl
          tag: v0.0.46
          token: ${{ steps.esc-secrets.outputs.PULUMI_BOT_TOKEN }}
          cache: enable
      - name: Clone ci-mgmt
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          path: ci-mgmt
      - name: Initialize submodule in pulumi-${{ inputs.provider_name }}
        run: cd pulumi-${{ inputs.provider_name }} && make upstream && cd ..
        continue-on-error: true
      - name: Delete existing workflows
        run: |
          rm pulumi-${{ inputs.provider_name }}/.github/workflows/cleanup-artifacts.yml || echo "not found"
          rm pulumi-${{ inputs.provider_name }}/.github/workflows/pull_request.yml || echo "not found"
          rm pulumi-${{ inputs.provider_name }}/.github/workflows/master.yml || echo "not found"
      - name: Install mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3
      - name: Generate workflow files into pulumi-${{ inputs.provider_name }}
        run: |
          cd ci-mgmt/provider-ci && go run ./... generate \
                --config ../../pulumi-${{ inputs.provider_name }}/.ci-mgmt.yaml \
                --out ../../pulumi-${{ inputs.provider_name }}
      - name: Close obsolete PRs started by this workflow
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        if: ${{ !inputs.skip_closing_prs }}
        with:
          github-token: ${{ steps.esc-secrets.outputs.PULUMI_BOT_TOKEN }}
          script: |
            const regex = /Update GitHub Actions workflows/i;
            const repo = 'pulumi-${{ inputs.provider_name }}'
            console.log('Checking ' + repo);
            const { data: pullRequests } = await octokit.rest.pulls.list({
              owner: 'pulumi',
              repo: repo,
              state: 'open',
            });
            for (const pullRequest of pullRequests) {
              if (regex.test(pullRequest.title)) {
                console.log('Closing obsolete PR ' + pullRequest.number);
                await octokit.rest.pulls.update({
                  owner: 'pulumi',
                  repo: repo,
                  pull_number: pullRequest.number,
                  state: 'closed',
                });
              }
            }
      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          author: Pulumi Bot <bot@pulumi.com>
          body: "This PR was automatically generated by the ${{ inputs.caller_workflow }} workflow in the pulumi/ci-mgmt repo, from commit ${{ github.sha }}."
          branch: "update-github-actions-workflows-${{ github.run_number }}"
          committer: Pulumi Bot <bot@pulumi.com>
          commit-message: "[internal] Update GitHub Actions workflow files"
          labels: "impact/no-changelog-required"
          title: "${{ inputs.downstream_test == true && '[DOWNSTREAM TEST] ' || ''}}Update GitHub Actions workflows."
          path: pulumi-${{ inputs.provider_name }}
          token: ${{ steps.esc-secrets.outputs.PULUMI_BOT_TOKEN }}
      - name: "Set PR to auto-merge"
        if: steps.create-pr.outputs.pull-request-operation == 'created' && inputs.automerge
        # Not all providers have auto-merge enabled, and we don't want to fail providers
        # that don't have auto-merge enabled.
        #
        # After https://github.com/pulumi/home/issues/3140 is closed, we should remove
        # `continue-on-error: true`.
        continue-on-error: true
        run: "gh pr merge --auto --squash ${{ steps.create-pr.outputs.pull-request-url }}"
      - name: Sleep to prevent hitting secondary rate limits
        run: sleep 1
    outputs:
      pull_request_created: ${{ steps.create-pr.outputs.pull-request-operation == 'created' }}
