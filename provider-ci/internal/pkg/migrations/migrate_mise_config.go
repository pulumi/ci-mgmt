package migrations

import (
	"errors"
	"fmt"
	"os"
	"path/filepath"
	"strings"
)

// We moved the mise.toml file to the `.config` directory.
// This allows users to override the file by placing a mise file
// at the root of the repo. see https://mise.jdx.dev/configuration.html
type deleteOldMiseConfig struct{}

func (deleteOldMiseConfig) Name() string {
	return "Delete old mise.toml file"
}
func (deleteOldMiseConfig) ShouldRun(templateName string) bool {
	return true
}

// This removes the old root level mise.toml file. ci-mgmt will create the
// new file at `.config/mise.toml`, but we cannot rely on it to delete the old
// file because we are now re-using the old file for overrides.
//
// This migration determines whether this is the "old" file or the new "overrides"
// file and will only delete the "old" file.
func (deleteOldMiseConfig) Migrate(templateName, outDir string) error {
	oldPath := filepath.Join(outDir, "mise.toml")
	oldFile, err := os.ReadFile(oldPath)
	if err != nil {
		if errors.Is(err, os.ErrNotExist) {
			return nil
		}
		return fmt.Errorf("error reading old mise.toml: %w", err)
	}

	// If the old root-level mise.toml exists, remove it.
	// The new overrides file will not have the `# WARNING` at the top
	if strings.Contains(string(oldFile), "# WARNING: This file is autogenerated - changes will be overwritten when regenerated by https://github.com/pulumi/ci-mgmt") {
		if err := os.Remove(oldPath); err != nil {
			return fmt.Errorf("could not remove old mise.toml: %w", err)
		}
	}

	return nil
}
