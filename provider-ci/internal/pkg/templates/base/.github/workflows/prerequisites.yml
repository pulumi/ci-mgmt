# WARNING: This file is autogenerated - changes will be overwritten when regenerated by https://github.com/pulumi/ci-mgmt

name: "Prerequisites"

on:
  workflow_call:
    inputs:
      is_pr:
        type: boolean
        required: true
      is_automated:
        type: boolean
        required: true
      default_branch:
        type: string
        required: true
    outputs:
      version:
        description: "Provider version being built"
        value: ${{ jobs.prerequisites.outputs.version }}

env:
#{{ .Config.Env | toYaml | indent 2 }}#

jobs:
  prerequisites:
    name: prerequisites
    runs-on: #{{ .Config.Runner.Prerequisites }}#
    permissions:
      contents: read
      pull-requests: write
    outputs:
      version: ${{ steps.provider-version.outputs.version }}
    steps:
#{{- if .Config.FreeDiskSpaceBeforeBuild }}#
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: #{{ .Config.ActionVersions.FreeDiskSpace }}#
      with:
        tool-cache: false
        swap-storage: false
        dotnet: false
#{{- end }}#
    - name: Checkout Repo
      uses: #{{ .Config.ActionVersions.Checkout }}#
      with:
        #{{- if .Config.CheckoutSubmodules }}#
        submodules: #{{ .Config.CheckoutSubmodules }}#
        #{{- end }}#
        persist-credentials: false
    - uses: #{{ .Config.ActionVersions.ProviderVersionAction }}#
      id: provider-version
      with:
        major-version: #{{ .Config.MajorVersion }}#
        set-env: 'PROVIDER_VERSION'
    #{{- if not .Config.NoSchema }}#
    - name: Cache examples generation
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: |
          .pulumi/examples-cache
        key: ${{ runner.os }}-${{ hashFiles('provider/go.sum') }}
    #{{- end }}#
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: go, pulumictl, pulumicli, schema-tools
    - name: Prepare local workspace before restoring previously built files
      run: make prepare_local_workspace
#{{- if .Config.Actions.PreBuild }}#
#{{ .Config.Actions.PreBuild | toYaml | indent 4 }}#
#{{- end }}#
    #{{- if not .Config.NoSchema }}#
    - name: Generate schema
      run: make schema
    #{{- end }}#
    #{{- if .Config.RegistryDocs }}#
    - name: Build registry docs
      run: make build_registry_docs
    #{{- end }}#
    - name: Build provider binary
      run: make provider
    - name: Unit-test provider code
      run: make test_provider
    - name: Upload coverage reports to Codecov
      uses: #{{ .Config.ActionVersions.Codecov }}#
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#{{- if not .Config.NoSchema }}#
    - if: inputs.is_pr
      name: Check Schema is Valid
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        {
          echo "SCHEMA_CHANGES<<$EOF";
          schema-tools compare -r github://api.github.com/#{{ .Config.Organization }}# -p #{{ .Config.Provider }}# -o "${{ inputs.default_branch }}" -n --local-path=provider/cmd/pulumi-resource-#{{ .Config.Provider }}#/schema.json;
          echo "$EOF";
        } >> "$GITHUB_ENV"
    - if: inputs.is_pr && inputs.is_automated == false && github.actor != 'dependabot[bot]'
      name: Comment on PR with Details of Schema Check
      uses: #{{ .Config.ActionVersions.PrComment }}#
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        comment-tag: schemaCheck
        message: >+
          ${{ env.SCHEMA_CHANGES }}


          Maintainer note: consult the [runbook](https://github.com/pulumi/platform-providers-team/blob/main/playbooks/tf-provider-updating.md) for dealing with any breaking changes.

#{{- if .Config.EnableConfigurationCheck }}#
    - if: inputs.is_pr
      name: Check Configuration section
      run: |
        sed -n '/## Configuration/,$p' README.md | sed -n '/## Reference/q;p' >> config_section.txt
        jq -r '.config | select(.variables) | .variables | keys[]' < provider/cmd/pulumi-resource-#{{ .Config.Provider }}#/schema.json >> keys.txt
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        {
          echo "MISSING_CONFIG<<$EOF";
          xargs -I {} sh -c "grep -q {} config_section.txt || echo \\\`{}\\\` not found in Configuration section" < keys.txt
          echo "$EOF";
        } >> "$GITHUB_ENV"

    - if: inputs.is_pr && inputs.is_automated == false
      name: Check for missing config
      run: |
        if [ ! -z "${{ env.MISSING_CONFIG }}" ]; then
        cat <<EOF
        ${{ env.MISSING_CONFIG }}
        EOF
        echo 'Please add a description for each of these options to `README.md`.'
        echo 'Details about them can be found in either the upstream docs or `schema.json`.'
        exit 1
        fi
#{{- end }}#
#{{- end }}#

    - name: Upload artifacts
      uses: ./.github/actions/upload-prerequisites
