# WARNING: This file is autogenerated - changes will be overwritten when regenerated by https://github.com/pulumi/ci-mgmt

name: run-acceptance-tests

on:
  pull_request:
    paths-ignore:
    - CHANGELOG.md
  repository_dispatch:
    types:
    - run-acceptance-tests-command

env:
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
#{{ .Config.Env | toYaml | indent 2 }}#

# This should cancel any previous runs of the same workflow on the same branch which are still running.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prerequisites:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/prerequisites.yml
    secrets: inherit
    with:
      default_branch: ${{ github.event.pull_request.base.ref }}
      is_pr: ${{ github.event_name == 'pull_request' }}
      is_automated: ${{ github.actor == 'dependabot[bot]' }}

  build_provider:
    uses: ./.github/workflows/build_provider.yml
    needs: prerequisites
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}
      matrix: |
        {
          "platform": [
            {"os": "linux", "arch": "amd64"},
            {"os": "windows", "arch": "amd64"}
          ]
        }

  test_provider:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: #{{ .Config.Runner.Prerequisites }}#
    needs: prerequisites
    permissions:
      contents: read
      pull-requests: write
    steps:
#{{- if .Config.FreeDiskSpaceBeforeBuild }}#
      # Run as first step so we don't delete things that have just been installed
      - name: Free Disk Space (Ubuntu)
        uses: #{{ .Config.ActionVersions.FreeDiskSpace }}#
        with:
          tool-cache: false
          swap-storage: false
          dotnet: false
#{{- end }}#
      - name: Checkout Repo
        uses: #{{ .Config.ActionVersions.Checkout }}#
        with:
          #{{- if .Config.CheckoutSubmodules }}#
          submodules: #{{ .Config.CheckoutSubmodules }}#
          #{{- end }}#
          persist-credentials: false
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: go, pulumictl, pulumicli
      #{{- if not .Config.NoSchema }}#
      - name: Restore prerequisites
        uses: ./.github/actions/download-prerequisites
      #{{- end }}#
      - name: Prepare local workspace
        run: make prepare_local_workspace
      - name: Unit-test provider code
        run: make test_provider
      - name: Upload coverage reports to Codecov
        uses: #{{ .Config.ActionVersions.Codecov }}#
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build_schema:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: #{{ .Config.Runner.Prerequisites }}#
    needs: prerequisites
    permissions:
      contents: read
      pull-requests: write
    steps:
#{{- if .Config.FreeDiskSpaceBeforeBuild }}#
      # Run as first step so we don't delete things that have just been installed
      - name: Free Disk Space (Ubuntu)
        uses: #{{ .Config.ActionVersions.FreeDiskSpace }}#
        with:
          tool-cache: false
          swap-storage: false
          dotnet: false
#{{- end }}#
      - name: Checkout Repo
        uses: #{{ .Config.ActionVersions.Checkout }}#
        with:
          #{{- if .Config.CheckoutSubmodules }}#
          submodules: #{{ .Config.CheckoutSubmodules }}#
          #{{- end }}#
          persist-credentials: false
    #{{- if not .Config.NoSchema }}#
      - name: Cache examples generation
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            .pulumi/examples-cache
          key: ${{ runner.os }}-${{ hashFiles('provider/go.sum') }}
    #{{- end }}#
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: go, pulumictl, pulumicli, schema-tools
      - name: Prepare local workspace before restoring previously built files
        run: make prepare_local_workspace
  #{{- if .Config.Actions.PreBuild }}#
  #{{ .Config.Actions.PreBuild | toYaml | indent 4 }}#
  #{{- end }}#
      #{{- if not .Config.NoSchema }}#
      - name: Restore prerequisites
        uses: ./.github/actions/download-prerequisites
      - name: Restore makefile progress
        # This mirrors the targets completed in the prerequisites job
        run: make --touch provider
      - name: Generate schema
        run: make schema
        env:
          PROVIDER_VERSION: ${{ needs.prerequisites.outputs.version }}
      #{{- end }}#
#{{- if not .Config.NoSchema }}#
      - if: ${{ github.event_name == 'pull_request' }}
        name: Check Schema is Valid
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "SCHEMA_CHANGES<<$EOF";
            schema-tools compare -r github://api.github.com/#{{ .Config.Organization }}# -p #{{ .Config.Provider }}# -o "${{ github.event.pull_request.base.ref }}" -n --local-path=provider/cmd/pulumi-resource-#{{ .Config.Provider }}#/schema.json;
            echo "$EOF";
          } >> "$GITHUB_ENV"
      - if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' == false && github.actor != 'dependabot[bot]'
        name: Comment on PR with Details of Schema Check
        uses: #{{ .Config.ActionVersions.PrComment }}#
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: schemaCheck
          message: >+
            ${{ env.SCHEMA_CHANGES }}


            Maintainer note: consult the [runbook](https://github.com/pulumi/platform-providers-team/blob/main/playbooks/tf-provider-updating.md) for dealing with any breaking changes.

#{{- if .Config.EnableConfigurationCheck }}#
      - if: github.event_name == 'pull_request'
        name: Check Configuration section
        run: |
          sed -n '/## Configuration/,$p' README.md | sed -n '/## Reference/q;p' >> config_section.txt
          jq -r '.config | select(.variables) | .variables | keys[]' < provider/cmd/pulumi-resource-#{{ .Config.Provider }}#/schema.json >> keys.txt
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "MISSING_CONFIG<<$EOF";
            xargs -I {} sh -c "grep -q {} config_section.txt || echo \\\`{}\\\` not found in Configuration section" < keys.txt
            echo "$EOF";
          } >> "$GITHUB_ENV"

      - if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' == false
        name: Check for missing config
        run: |
          if [ ! -z "${{ env.MISSING_CONFIG }}" ]; then
          cat <<EOF
          ${{ env.MISSING_CONFIG }}
          EOF
          echo 'Please add a description for each of these options to `README.md`.'
          echo 'Details about them can be found in either the upstream docs or `schema.json`.'
          exit 1
          fi
#{{- end }}#
#{{- end }}#

  #{{ if not .Config.NoSchema -}}#
  build_sdk:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    name: build_sdk
    needs: 
      - prerequisites
      - build_provider
    uses: ./.github/workflows/build_sdk.yml
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}
  #{{- end }}#

  comment-notification:
    if: github.event_name == 'repository_dispatch'
    name: comment-notification
    permissions:
      pull-requests: write
    runs-on: #{{ .Config.Runner.Default }}#
    steps:
    - id: run-url
      name: Create URL to the run output
      run: echo "run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> "$GITHUB_OUTPUT"
    - name: Update with Result
      uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
      with:
        body: "Please view the PR build: ${{ steps.run-url.outputs.run-url }}"
        issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
        repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
  #{{ if .Config.Lint -}}#
  lint:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    name: lint
    uses: ./.github/workflows/lint.yml
    secrets: inherit
  #{{ end -}}#

  sentinel:
    name: sentinel
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      statuses: write
    needs:
    - test
    - build_provider
    - license_check
    #{{- if .Config.Lint }}#
    - lint
    #{{- end }}#
    runs-on: #{{ .Config.Runner.Default }}#
    steps:
    - uses: guibranco/github-status-action-v2@0849440ec82c5fa69b2377725b9b7852a3977e76 # v1.1.13
      with:
        authToken: ${{secrets.GITHUB_TOKEN}}
        # Write an explicit status check called "Sentinel" which will only pass if this code really runs.
        # This should always be a required check for PRs.
        context: 'Sentinel'
        description: 'All required checks passed'
        state: 'success'
        # Write to the PR commit SHA if it's available as we don't want the merge commit sha,
        # otherwise use the current SHA for any other type of build.
        sha: ${{ github.event.pull_request.head.sha || github.sha }}

  test:
    # Don't run tests on PRs from forks.
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    uses: ./.github/workflows/test.yml
    needs:
      - prerequisites
      - build_provider
      - test_provider
#{{- if not .Config.NoSchema }}#
      - build_sdk
#{{- end }}#
    permissions:
      contents: read
      id-token: write
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}

  license_check:
    name: License Check
    uses: ./.github/workflows/license.yml
    secrets: inherit
