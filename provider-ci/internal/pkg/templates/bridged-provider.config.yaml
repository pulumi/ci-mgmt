major-version: 2
#javaGenVersion: 0.0.0
#upstreamProviderOrg: terraform-providers"
parallel: 3
timeout: 60
lint: true
providerDefaultBranch: master
fail-on-missing-mapping: true
fail-on-extra-mapping: true
publishRegistry: true
checkoutSubmodules: false
testMasterAndReleaseWorkflows: false
toolVersions:
  dotnet: "6.0.x"
  go: "1.21.x"
  java: "11"
  gradle: "7.6"
  node: "20.x"
  python: "3.11.8"
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_USERNAME: __token__
  PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  TF_APPEND_USER_AGENT: pulumi
  TRAVIS_OS_NAME: linux
actions:
  setupPulumi:
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: "^3"
  # preBuild:
  #  - Your action here
  # preTest:
  #  - Your action here

# Additional tests run as part of `run-acceptance-tests.yml`, `master.yml`, `main.yml`,
# `prerelease.yml` and `release.yml`.
extraTests:
#   your_test_name:
#     name: My Test
#     ...
# Run e2e tests using the examples and test suite in the pulumi/examples repo.
testPulumiExamples: false
runner:
  default: ubuntu-latest
  prerequisites: ubuntu-latest
  # publish: ubuntu-latest
  # buildSdk: ubuntu-latest
actionVersions:
  setupGo: actions/setup-go@v5
  setupDotNet: actions/setup-dotnet@v4
  setupJava: actions/setup-java@v4
  setupGradle: gradle/gradle-build-action@v3
  setupNode: actions/setup-node@v4
  setupPython: actions/setup-python@v5

  configureAwsCredentials: aws-actions/configure-aws-credentials@v4
  setupGcloud: google-github-actions/setup-gcloud@v2
  googleAuth: google-github-actions/auth@v2
  goReleaser: goreleaser/goreleaser-action@v5
  installGhRelease: jaxxstorm/action-install-gh-release@v1.11.0
  checkout: actions/checkout@v4
  pulumictlTag: v0.0.46
  cleanupArtifact: c-hive/gha-remove-artifacts@v1
  createOrUpdateComment: peter-evans/create-or-update-comment@v1
  downloadArtifact: actions/download-artifact@v4
  notifySlack: 8398a7/action-slack@v3
  pathsFilter: dorny/paths-filter@v2
  prComment: thollander/actions-comment-pull-request@v2
  slashCommand: peter-evans/slash-command-dispatch@v2
  uploadArtifact: actions/upload-artifact@v4
  upgradeProviderAction: pulumi/pulumi-upgrade-provider-action@v0.0.12
  slackNotification: rtCamp/action-slack-notify@v2
publish:
  publisherAction: pulumi/pulumi-package-publisher@v0.0.15
  sdk: all
  goSdk:
    # Set to `true` to use the below configuration to push a new commit somewhere else.
    usePush: true
    # By default we'll push back to its own repository as a standalone, tagged commit.
    repository: ${{ github.repository }}
    baseRef: ${{ github.sha }}
    source: sdk
    path: sdk
    additive: false
worktreeAllowedChanges: |-
  sdk/**/pulumi-plugin.json
  sdk/dotnet/Pulumi.*.csproj
  sdk/go/**/pulumiUtilities.go
  sdk/nodejs/package.json
  sdk/python/pyproject.toml
