name: "Build Provider"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: Version of the provider to build

jobs:
  build_provider:
    name: Build ${{ matrix.platform.os }}-${{ matrix.platform.arch }}
    runs-on: #{{ if .Config.Runner.BuildSDK }}##{{- .Config.Runner.BuildSDK }}##{{ else }}##{{- .Config.Runner.Default }}##{{ end }}#
    env:
      PROVIDER_VERSION: ${{ inputs.version }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: true
      matrix:
        platform:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      #{{- if .Config.FreeDiskSpaceBeforeBuild }}#
      # Run as first step so we don't delete things that have just been installed
      - name: Free Disk Space (Ubuntu)
        uses: #{{ .Config.ActionVersions.FreeDiskSpace }}#
        with:
          tool-cache: false
          swap-storage: false
          dotnet: false
      #{{- end }}#
      - name: Checkout Repo
        uses: #{{ .Config.ActionVersions.Checkout }}#
        with:
          #{{- if .Config.CheckoutSubmodules }}#
          submodules: #{{ .Config.CheckoutSubmodules }}#
          #{{- end }}#
          persist-credentials: false
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: pulumictl, go
      - name: Prepare local workspace before restoring previously built
        run: make prepare_local_workspace
      - name: Download schema-embed.json
        uses: #{{ .Config.ActionVersions.DownloadArtifact }}#
        with:
          # Use a pattern to avoid failing if the artifact doesn't exist
          pattern: schema-embed.*
          # Avoid creating directories for each artifact
          merge-multiple: true
          path: provider/cmd/pulumi-resource-#{{ .Config.Provider }}#
      - name: Restore makefile progress
        run: make --touch provider schema

      - name: Build provider
        if: matrix.platform.os != 'windows'
        run: make bin/${{ matrix.platform.os }}-${{ matrix.platform.arch }}/pulumi-resource-#{{ .Config.Provider }}#

      - name: Build windows provider
        if: matrix.platform.os == 'windows'
        run: make bin/${{ matrix.platform.os }}-${{ matrix.platform.arch }}/pulumi-resource-#{{ .Config.Provider }}#.exe

      - name: Sign windows provider
        if: matrix.platform.os == 'windows'
        run: |
          az login --service-principal \
            -u ${{ secrets.AZURE_SIGNING_CLIENT_ID }} \
            -p ${{ secrets.AZURE_SIGNING_CLIENT_SECRET }} \
            -t ${{ secrets.AZURE_SIGNING_TENANT_ID }} \
            -o none;

          wget https://github.com/ebourg/jsign/releases/download/6.0/jsign-6.0.jar;

          java -jar jsign-6.0.jar \
             --storetype AZUREKEYVAULT \
             --keystore "PulumiCodeSigning" \
             --url ${{ secrets.AZURE_SIGNING_KEY_VAULT_URI }} \
             --storepass "$(az account get-access-token --resource "https://vault.azure.net" | jq -r .accessToken)" \
             bin/windows-amd64/pulumi-resource-#{{ .Config.Provider }}#.exe;

      - name: Package provider
        run: make provider_dist-${{ matrix.platform.os }}-${{ matrix.platform.arch }}

      - name: Upload artifacts
        uses: #{{ .Config.ActionVersions.UploadArtifact }}#
        with:
          name: pulumi-resource-#{{ .Config.Provider }}#-v${{ inputs.version }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.tar.gz
          path: bin/pulumi-resource-#{{ .Config.Provider }}#-v${{ inputs.version }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.tar.gz
          retention-days: 30
