name: "Build Provider"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build_provider:
    name: Build ${{ matrix.platform.os }}-${{ matrix.platform.arch }}
    runs-on: #{{ if .Config.runner.buildSdk }}##{{- .Config.runner.buildSdk }}##{{ else }}##{{- .Config.runner.default }}##{{ end }}#
    strategy:
      fail-fast: true
      matrix:
        platform:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      #{{- if .Config.freeDiskSpaceBeforeBuild }}#
      # Run as first step so we don't delete things that have just been installed
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        with:
          tool-cache: false
          swap-storage: false
      #{{- end }}#
      - name: Checkout Repo
        uses: #{{ .Config.actionVersions.checkout }}#
        #{{- if .Config.checkoutSubmodules }}#
        with:
          submodules: #{{ .Config.checkoutSubmodules }}#
      #{{- end }}#
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: pulumictl, go
      - name: Prepare for build
        shell: bash
        # This installs plugins and prepares upstream
        # We have to run tfgen in order to generate the cmd/pulumi-resource-xyz/schema_embed.json file.
        run: make tfgen
      - name: Calc provider path
        id: provider_path
        run: |
          {
            echo -n "PROVIDER_PATH="
            #{{- if ge (index .Config "major-version") 2 }}#
            echo "provider/v#{{ index .Config "major-version" }}#"
            #{{- else }}#
            echo "provider"
            #{{- end }}#
          } >> "$GITHUB_OUTPUT"
      - name: Calc ldflags
        id: ldflags
        run: |
          {
            echo -n "LDFLAGS="
            echo -n "-X github.com/#{{ .Repository }}#/${{ steps.provider_path.outputs.PROVIDER_PATH }}/pkg/version.Version=v${{ inputs.version }}"
            #{{- if .Config.providerVersion }}#
            echo -n " -X #{{ .Config.providerVersion }}#=v${{ inputs.version }}"
            #{{- end }}#
            #{{- range (index .Config "extra-ld-flags") }}#
            echo -n " #{{ . }}# "
            #{{- end }}#
            echo ""
          } >> "$GITHUB_OUTPUT"
      - name: Go build
        shell: bash
        working-directory: provider
        env:
          GOOS: ${{ matrix.platform.os }}
          GOARCH: ${{ matrix.platform.arch }}
          PARALLELISM: >-
            #{{- if .Config.goBuildParallelism }}#
            -p #{{ .Config.goBuildParallelism }}#
            #{{- else }}#
            #{{- end }}#
        # YAML `>` will join consecutive lines with a space
        run: go build ${{ env.PARALLELISM }} -o ${{ github.workspace }}/bin/${{ matrix.platform.os }}-${{ matrix.platform.arch }}/pulumi-resource-#{{ .Config.provider }}# -ldflags "${{ steps.ldflags.outputs.LDFLAGS }}" github.com/#{{ .Repository }}#/${{ steps.provider_path.outputs.PROVIDER_PATH }}/cmd/pulumi-resource-#{{ .Config.provider }}#
      - name: Package provider binary
        shell: bash
        run: >
          tar --gzip -cf bin/pulumi-resource-#{{ .Config.provider }}#-v${{ inputs.version }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.tar.gz
          README.md LICENSE
          -C bin/${{ matrix.platform.os }}-${{ matrix.platform.arch }} pulumi-resource-#{{ .Config.provider }}#
      - name: Upload artifacts
        uses: #{{ .Config.actionVersions.uploadArtifact }}#
        with:
          name: pulumi-resource-#{{ .Config.provider }}#-v${{ inputs.version }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.tar.gz
          path: bin/pulumi-resource-#{{ .Config.provider }}#-v${{ inputs.version }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.tar.gz
          retention-days: 30
