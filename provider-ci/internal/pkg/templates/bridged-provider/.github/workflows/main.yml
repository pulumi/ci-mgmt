# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt

env:
#{{ .Config.env | toYaml | indent 2 }}#
jobs:
  prerequisites:
    uses: ./.github/workflows/prerequisites.yml
    secrets: inherit
    with:
      default_branch: ${{ github.event.repository.default_branch }}
      is_pr: ${{ github.event_name == 'pull_request' }}
      is_automated: ${{ github.actor == 'dependabot[bot]' }}

  build_provider:
    uses: ./.github/workflows/build_provider.yml
    needs: prerequisites
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}

  build_sdk:
    name: build_sdk
    needs: prerequisites
    uses: ./.github/workflows/build_sdk.yml
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}

  generate_coverage_data:
    continue-on-error: true
    env:
      COVERAGE_OUTPUT_DIR: ${{ secrets.COVERAGE_OUTPUT_DIR }}
    name: generate_coverage_data
    needs: prerequisites
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        tool-cache: false
        swap-storage: false
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
    - name: Configure AWS Credentials
      uses: #{{ .Config.actionVersions.configureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_CORP_S3_UPLOAD_ACCESS_KEY_ID }}
        aws-region: us-west-2
        aws-secret-access-key: ${{ secrets.AWS_CORP_S3_UPLOAD_SECRET_ACCESS_KEY }}
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, go, schema-tools
    - name: Echo Coverage Output Dir
      run: 'echo "Coverage output directory: ${{ env.COVERAGE_OUTPUT_DIR }}"'
    - name: Generate Coverage Data
      run: PULUMI_MISSING_DOCS_ERROR=true make tfgen
    - name: Summarize Provider Coverage Results
      run: cat ${{ env.COVERAGE_OUTPUT_DIR }}/shortSummary.txt
    - name: Upload coverage data to S3
      run: >-
        summaryName="${PROVIDER}_summary_$(date +"%Y-%m-%d_%H-%M-%S").json"

        s3FullURI="s3://${{ secrets.S3_COVERAGE_BUCKET_NAME }}/summaries/${summaryName}"

        aws s3 cp "${{ env.COVERAGE_OUTPUT_DIR }}/summary.json" "${s3FullURI}" --acl bucket-owner-full-control
  #{{ if .Config.lint -}}#
  lint:
    name: lint
    uses: ./.github/workflows/lint.yml
    secrets: inherit
  #{{ end -}}#

  license_check:
    name: License Check
    uses: ./.github/workflows/license.yml
    secrets: inherit

  publish:
    name: publish
    needs:
      - prerequisites
      - build_provider
      - test
      - license_check
      #{{- range $action, $_ := .Config.extraTests }}#
      - #{{ $action }}#
      #{{- end }}#
    uses: ./.github/workflows/publish.yml
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}
      isPrerelease: true
      skipGoSdk: true

  tag_release_if_labeled_needs_release:
    name: Tag release if labeled as needs-release
    needs: publish
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: check if this commit needs release
      uses: pulumi/action-release-by-pr-label@main
      with:
        command: "release-if-needed"
        repo: ${{ github.repository }}
        commit: ${{ github.sha }}
        slack_channel: ${{ secrets.RELEASE_OPS_SLACK_CHANNEL }}
      env:
        RELEASE_BOT_ENDPOINT: ${{ secrets.RELEASE_BOT_ENDPOINT }}
        RELEASE_BOT_KEY: ${{ secrets.RELEASE_BOT_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: test
    needs:
      - prerequisites
      - build_sdk
    permissions:
      contents: read
      id-token: write
    runs-on: #{{ if .Config.runner.buildSdk }}##{{- .Config.runner.buildSdk }}##{{ else }}##{{- .Config.runner.default }}##{{ end }}#
    env:
      PROVIDER_VERSION: ${{ needs.prerequisites.outputs.version }}
    steps:
#{{- if .Config.freeDiskSpaceBeforeTest }}#
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: #{{ .Config.actionVersions.freeDiskSpace }}#
      with:
        tool-cache: false
        swap-storage: false
#{{- end }}#
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, ${{ matrix.language }}
    - name: Download bin
      uses: ./.github/actions/download-bin
    - name: Add NuGet source
      if: matrix.language == 'dotnet'
      run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download SDK
      uses: ./.github/actions/download-sdk
      with:
        language: ${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      if: matrix.language == 'python'
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    #{{- if .Config.docker }}#
    - name: Run docker compose
      run: docker compose -f testing/docker-compose.yml up --build -d
    #{{- end }}#
    #{{- if .Config.aws }}#
    - name: Configure AWS Credentials
      uses: #{{ .Config.actionVersions.configureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: #{{ .Config.provider }}#@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    #{{- end }}#
    #{{- if .Config.gcp }}#
    - name: Authenticate to Google Cloud
      uses: #{{ .Config.actionVersions.googleAuth }}#
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: #{{ .Config.actionVersions.setupGcloud }}#
      with:
        install_components: gke-gcloud-auth-plugin
    #{{- end }}#
    #{{- if .Config.gcpRegistry }}#
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    #{{- end }}#
    #{{- if .Config.sshPrivateKey }}#
    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: #{{ .Config.sshPrivateKey }}#
    #{{- end }}#
    #{{- if .Config.integrationTestProvider }}#
    - name: Prepare upstream code
      run: make upstream
    #{{- end }}#
    #{{- if index .Config "setup-script" }}#
    - name: Run setup script
      run: #{{ index .Config "setup-script" }}#
    #{{- end }}#
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
    - name: Install gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v2.5.0
#{{- if .Config.actions.preTest }}#
#{{ .Config.actions.preTest | toYaml | indent 4 }}#
#{{- end }}#
    #{{- if .Config.integrationTestProvider }}#
    - name: Run provider tests
      working-directory: provider
      run: go test -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4
    #{{- end }}#
    - name: Run tests
      run: cd examples && go test -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4
    strategy:
      fail-fast: false
      matrix:
        language:
#{{ .Config.languages | toYaml | indent 8 }}#
#{{- if .Config.extraTests }}#
#{{ .Config.extraTests | toYaml | indent 2 }}#
#{{ end }}#
name: #{{ .Config.providerDefaultBranch }}#
on:
  workflow_dispatch: {}
  push:
    branches:
    - #{{ .Config.providerDefaultBranch }}#
    paths-ignore:
    - "**.md"
    tags-ignore:
    - v*
    - sdk/*
    - "**"
#{{- if .Config.testMasterAndReleaseWorkflows }}#
  pull_request:
#{{ end }}#
