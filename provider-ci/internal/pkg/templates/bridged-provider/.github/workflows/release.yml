# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt

env:
  #{{- if eq .Config.provider "null" }}#
  PROVIDER: "#{{ .Config.provider }}#"
  #{{- else }}#
  PROVIDER: #{{ .Config.provider }}#
  #{{- end }}#
#{{ .Config.env | toYaml | indent 2 }}#
jobs:
  build_sdk:
    name: build_sdk
    needs: prerequisites
    runs-on: #{{ if .Config.runner.buildSdk }}##{{- .Config.runner.buildSdk }}##{{ else }}##{{- .Config.runner.default }}##{{ end }}#
    steps:
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
#{{ .Splices.build_sdk }}#
  #{{ if .Config.publishRegistry -}}#
  create_docs_build:
    name: create_docs_build
    needs: tag_sdk
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Install pulumictl
      uses: #{{ .Config.actionVersions.installGhRelease }}#
      with:
        tag: #{{ .Config.actionVersions.pulumictlTag }}#
        repo: pulumi/pulumictl
    - env:
        GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
      name: Dispatch Event
      run: pulumictl create docs-build pulumi-${{ env.PROVIDER }}
        "${GITHUB_REF#refs/tags/}"
  #{{ end -}}#
  #{{ if .Config.lint -}}#
  lint:
    name: lint
    uses: ./.github/workflows/lint.yml
    secrets: inherit
  #{{ end -}}#

  license_check:
    name: License Check
    uses: ./.github/workflows/license.yml
    secrets: inherit
  prerequisites:
    name: prerequisites
#{{ .Splices.prerequisites }}#

  publish:
    name: publish
    needs:
      - test
      - license_check
      #{{- range $action, $_ := .Config.extraTests }}#
      - #{{ $action }}#
      #{{- end }}#
    runs-on: #{{ if .Config.runner.publish }}##{{- .Config.runner.publish }}##{{ else }}##{{- .Config.runner.default }}##{{ end }}#
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        swap-storage: false
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
#{{ .Config.actions.setupGo | toYaml | indent 4 }}#
    - name: Install pulumictl
      uses: #{{ .Config.actionVersions.installGhRelease }}#
      with:
        tag: #{{ .Config.actionVersions.pulumictlTag }}#
        repo: pulumi/pulumictl
#{{ .Config.actions.setupPulumi | toYaml | indent 4 }}#
    - name: Configure AWS Credentials
      uses: #{{ .Config.actionVersions.configureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-external-id: upload-pulumi-release
        role-session-name: ${{ env.PROVIDER }}@githubActions
        role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
    - id: version
      uses: pulumi/provider-version-action@v1
    - name: Run GoReleaser
      uses: #{{ .Config.actionVersions.goReleaser }}#
      env:
        GORELEASER_CURRENT_TAG: v${{ steps.version.outputs.version }}
      with:
        args: -p #{{ .Config.parallel }}# release --rm-dist --timeout #{{ .Config.timeout }}#m0s
        version: latest
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: #{{ .Config.actionVersions.notifySlack }}#
      with:
        author_name: Failure in publishing binaries
        fields: repo,commit,author,action
        status: ${{ job.status }}
  publish_sdk:
    name: publish_sdk
    needs: publish
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Publish SDKs
      uses: #{{ .Config.publish.publisherAction }}#
      with:
        sdk: #{{ .Config.publish.sdk }}#
    - env:
        SLACK_CHANNEL: provider-upgrade-publish-status
        SLACK_COLOR: "#FF0000"
        SLACK_ICON_EMOJI: ":taco:"
        SLACK_MESSAGE: "Publish failed :x:"
        SLACK_TITLE: ${{ github.event.repository.name }} upgrade result
        SLACK_USERNAME: provider-bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()
      name: Send Publish Failure To Slack
      uses: #{{ .Config.actionVersions.slackNotification }}#
  tag_sdk:
    name: tag_sdk
    needs: publish_sdk
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
    - name: Install pulumictl
      uses: #{{ .Config.actionVersions.installGhRelease }}#
      with:
        tag: #{{ .Config.actionVersions.pulumictlTag }}#
        repo: pulumi/pulumictl
    - id: version
      uses: pulumi/provider-version-action@v1
    - name: Add SDK version tag
      run: git tag "sdk/v${{ steps.version.outputs.version }}" && git push origin
        "sdk/v${{ steps.version.outputs.version }}"

  clean_up_release_labels:
    name: Clean up release labels
    #{{ if .Config.publishRegistry -}}#
    needs: create_docs_build
    #{{ else }}#
    needs: tag_sdk
    #{{- end }}#
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Clean up release labels
      uses: pulumi/action-release-by-pr-label@main
      with:
        command: "clean-up-release-labels"
        repo: ${{ github.repository }}
        commit: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: test
    needs: build_sdk
    permissions:
      contents: read
      id-token: write
    runs-on: #{{ if .Config.runner.buildSdk }}##{{- .Config.runner.buildSdk }}##{{ else }}##{{- .Config.runner.default }}##{{ end }}#
    steps:
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
    - uses: pulumi/provider-version-action@v1
      with:
        set-env: 'PROVIDER_VERSION'
    - name: Checkout Scripts Repo
      uses: #{{ .Config.actionVersions.checkout }}#
      with:
        path: ci-scripts
        repository: pulumi/scripts
        ref: #{{ .Config.pulumiScriptsRef }}#
#{{ .Config.actions.setupGo | toYaml | indent 4 }}#
    - name: Install pulumictl
      uses: #{{ .Config.actionVersions.installGhRelease }}#
      with:
        tag: #{{ .Config.actionVersions.pulumictlTag }}#
        repo: pulumi/pulumictl
#{{ .Config.actions.setupPulumi | toYaml | indent 4 }}#
    - name: Setup Node
      uses: #{{ .Config.actionVersions.setupNode }}#
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: #{{ .Config.actionVersions.setupDotNet }}#
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: #{{ .Config.actionVersions.setupPython }}#
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Setup Java
      uses: #{{ .Config.actionVersions.setupJava }}#
      with:
        cache: gradle
        distribution: temurin
        java-version: ${{ env.JAVAVERSION }}
    - name: Setup Gradle
      uses: #{{ .Config.actionVersions.setupGradle }}#
      with:
        gradle-version: ${{ env.GRADLEVERSION }}
    - name: Download provider + tfgen binaries
      uses: #{{ .Config.actionVersions.downloadArtifact }}#
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: >-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin

        find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print -exec chmod +x {} \;
    - run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download SDK
      uses: #{{ .Config.actionVersions.downloadArtifact }}#
      with:
        name: ${{ matrix.language }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress SDK folder
      run: tar -zxf ${{ github.workspace }}/sdk/${{ matrix.language }}.tar.gz -C ${{
        github.workspace }}/sdk/${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    #{{- if .Config.docker }}#
    - name: Run docker compose
      run: docker compose -f testing/docker-compose.yml up --build -d
    #{{- end }}#
    #{{- if .Config.aws }}#
    - name: Configure AWS Credentials
      uses: #{{ .Config.actionVersions.configureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: ${{ env.PROVIDER }}@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    #{{- end }}#
    #{{- if .Config.gcp }}#
    - name: Authenticate to Google Cloud
      uses: #{{ .Config.actionVersions.googleAuth }}#
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: #{{ .Config.actionVersions.setupGcloud }}#
      with:
        install_components: gke-gcloud-auth-plugin
    #{{- end }}#
    #{{- if .Config.gcpRegistry }}#
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    #{{- end }}#
    #{{- if index .Config "setup-script" }}#
    - name: Run setup script
      run: #{{ index .Config "setup-script" }}#
    #{{- end }}#
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
    - name: Install gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v2.5.0
#{{- if .Config.actions.preTest }}#
#{{ .Config.actions.preTest | toYaml | indent 4 }}#
#{{- end }}#
    - name: Run tests
      run: cd examples && go test -v -json -count=1 -cover -timeout 2h -tags=${{
        matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: #{{ .Config.actionVersions.notifySlack }}#
      with:
        author_name: Failure in running ${{ matrix.language }} tests
        fields: repo,commit,author,action
        status: ${{ job.status }}
    strategy:
      fail-fast: false
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go
        - java
#{{- if .Config.extraTests }}#
#{{ .Config.extraTests | toYaml | indent 2 }}#
#{{ end }}#
name: release
on:
  push:
    tags:
    - v*.*.*
    - "!v*.*.*-**"
#{{- if .Config.testMasterAndReleaseWorkflows }}#
  pull_request:
#{{ end }}#
