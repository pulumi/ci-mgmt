# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt

env:
#{{ .Config.env | toYaml | indent 2 }}#
jobs:
  prerequisites:
    uses: ./.github/workflows/prerequisites.yml
    secrets: inherit
    with:
      default_branch: ${{ github.event.repository.default_branch }}
      is_pr: ${{ github.event_name == 'pull_request' }}
      is_automated: ${{ github.actor == 'dependabot[bot]' }}

  build_sdk:
    name: build_sdk
    needs: prerequisites
    uses: ./.github/workflows/build_sdk.yml
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}

  #{{ if .Config.publishRegistry -}}#
  create_docs_build:
    name: create_docs_build
    needs: publish_go_sdk
    runs-on: #{{ .Config.runner.default }}#
    steps:
      - name: Dispatch Metadata build
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PULUMI_BOT_TOKEN }}
          repository: pulumi/registry
          event-type: resource-provider
          client-payload: |-
            {
              "project": "${{ github.repository }}",
              "project-shortname": "#{{ .Config.provider }}#",
              "ref": "${{ github.ref_name }}"
            }
  #{{ end -}}#
  #{{ if .Config.lint -}}#
  lint:
    name: lint
    uses: ./.github/workflows/lint.yml
    secrets: inherit
  #{{ end -}}#

  license_check:
    name: License Check
    uses: ./.github/workflows/license.yml
    secrets: inherit

  publish:
    name: publish
    needs:
      - prerequisites
      - test
      - license_check
      #{{- range $action, $_ := .Config.extraTests }}#
      - #{{ $action }}#
      #{{- end }}#
    runs-on: #{{ if .Config.runner.publish }}##{{- .Config.runner.publish }}##{{ else }}##{{- .Config.runner.default }}##{{ end }}#
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        swap-storage: false
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, go
    - name: Configure AWS Credentials
      uses: #{{ .Config.actionVersions.configureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-external-id: upload-pulumi-release
        role-session-name: #{{ .Config.provider }}#@githubActions
        role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
    - name: Run GoReleaser
      uses: #{{ .Config.actionVersions.goReleaser }}#
      env:
        GORELEASER_CURRENT_TAG: v${{ needs.prerequisites.outputs.version }}
        PROVIDER_VERSION: ${{ needs.prerequisites.outputs.version }}
      with:
        args: -p #{{ .Config.parallel }}# release --rm-dist --timeout #{{ .Config.timeout }}#m0s
        version: latest
  publish_sdk:
    name: publish_sdk
    needs:
      - prerequisites
      - publish
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Publish SDKs
      uses: #{{ .Config.publish.publisherAction }}#
      with:
        sdk: #{{ .Config.publish.sdk }}#
        version: ${{ needs.prerequisites.outputs.version }}
        dotnet-version: "#{{ .Config.toolVersions.dotnet }}#"
        java-version: "#{{ .Config.toolVersions.java }}#"
        node-version: "#{{ .Config.toolVersions.node }}#"
        python-version: "#{{ .Config.toolVersions.python }}#"
    - env:
        SLACK_CHANNEL: provider-upgrade-publish-status
        SLACK_COLOR: "#FF0000"
        SLACK_ICON_EMOJI: ":taco:"
        SLACK_MESSAGE: "Publish failed :x:"
        SLACK_TITLE: ${{ github.event.repository.name }} upgrade result
        SLACK_USERNAME: provider-bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()
      name: Send Publish Failure To Slack
      uses: #{{ .Config.actionVersions.slackNotification }}#
  publish_go_sdk:
    name: publish_go_sdk
    needs:
      - prerequisites
      - publish_sdk
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
#{{- if .Config.publish.goSdk.usePush }}#
    - name: Download Go SDK
      uses: actions/download-artifact@v4
      with:
        name: go-sdk.tar.gz
        path: ${{ github.workspace }}/sdk/
    - name: Uncompress Go SDK
      run: tar -zxf ${{ github.workspace }}/sdk/go.tar.gz -C
        ${{ github.workspace }}/sdk/go
      shell: bash
    - uses: pulumi/publish-go-sdk-action@v1
      with:
        repository: #{{ .Config.publish.goSdk.repository }}#
        base-ref: #{{ .Config.publish.goSdk.baseRef }}#
        source: #{{ .Config.publish.goSdk.source }}#
        path: #{{ .Config.publish.goSdk.path }}#
        version: ${{ needs.prerequisites.outputs.version }}
        additive: #{{ .Config.publish.goSdk.additive }}#
        # Avoid including other language SDKs & artifacts in the commit
        files: |
          go.*
          go/**
          !*.tar.gz
#{{- else }}#
    - name: Add SDK version tag
      run: git tag "sdk/v${{ needs.prerequisites.outputs.version }}" && git push origin
        "sdk/v${{ needs.prerequisites.outputs.version }}"
#{{- end }}#

  clean_up_release_labels:
    name: Clean up release labels
    #{{ if .Config.publishRegistry -}}#
    needs: create_docs_build
    #{{ else }}#
    needs: tag_sdk
    #{{- end }}#
    runs-on: #{{ .Config.runner.default }}#
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Clean up release labels
      uses: pulumi/action-release-by-pr-label@main
      with:
        command: "clean-up-release-labels"
        repo: ${{ github.repository }}
        commit: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: test
    needs:
      - prerequisites
      - build_sdk
    permissions:
      contents: read
      id-token: write
    runs-on: #{{ if .Config.runner.buildSdk }}##{{- .Config.runner.buildSdk }}##{{ else }}##{{- .Config.runner.default }}##{{ end }}#
    env:
      PROVIDER_VERSION: ${{ needs.prerequisites.outputs.version }}
    steps:
#{{- if .Config.freeDiskSpaceBeforeTest }}#
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
      with:
        tool-cache: false
        swap-storage: false
#{{- end }}#
    - name: Checkout Repo
      uses: #{{ .Config.actionVersions.checkout }}#
#{{- if .Config.checkoutSubmodules }}#
      with:
        submodules: #{{ .Config.checkoutSubmodules }}#
#{{- end }}#
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, go, node, dotnet, python, java
    - name: Download provider + tfgen binaries
      uses: #{{ .Config.actionVersions.downloadArtifact }}#
      with:
        name: #{{ .Config.provider }}#-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: >-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin

        find ${{ github.workspace }} -name "pulumi-*-#{{ .Config.provider }}#" -print -exec chmod +x {} \;
    - run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download SDK
      uses: #{{ .Config.actionVersions.downloadArtifact }}#
      with:
        name: ${{ matrix.language }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress SDK folder
      run: tar -zxf ${{ github.workspace }}/sdk/${{ matrix.language }}.tar.gz -C ${{
        github.workspace }}/sdk/${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    #{{- if .Config.docker }}#
    - name: Run docker compose
      run: docker compose -f testing/docker-compose.yml up --build -d
    #{{- end }}#
    #{{- if .Config.aws }}#
    - name: Configure AWS Credentials
      uses: #{{ .Config.actionVersions.configureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: #{{ .Config.provider }}#@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    #{{- end }}#
    #{{- if .Config.gcp }}#
    - name: Authenticate to Google Cloud
      uses: #{{ .Config.actionVersions.googleAuth }}#
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: #{{ .Config.actionVersions.setupGcloud }}#
      with:
        install_components: gke-gcloud-auth-plugin
    #{{- end }}#
    #{{- if .Config.gcpRegistry }}#
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    #{{- end }}#
    #{{- if index .Config "setup-script" }}#
    - name: Run setup script
      run: #{{ index .Config "setup-script" }}#
    #{{- end }}#
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
    - name: Install gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v2.5.0
#{{- if .Config.actions.preTest }}#
#{{ .Config.actions.preTest | toYaml | indent 4 }}#
#{{- end }}#
    - name: Run tests
      run: cd examples && go test -v -json -count=1 -cover -timeout 2h -tags=${{
        matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
    strategy:
      fail-fast: false
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go
        - java
#{{- if .Config.extraTests }}#
#{{ .Config.extraTests | toYaml | indent 2 }}#
#{{ end }}#
  verify-release:
    name: verify-release
    needs:
      - prerequisites
      - publish
      - publish_sdk
      - publish_go_sdk
    uses: ./.github/workflows/verify-release.yml
    secrets: inherit
    with:
      providerVersion: ${{ needs.prerequisites.outputs.version }}
      enableMacosRunner: true

name: release
on:
  push:
    tags:
    - v*.*.*
    - "!v*.*.*-**"
#{{- if .Config.testMasterAndReleaseWorkflows }}#
  pull_request:
#{{ end }}#
