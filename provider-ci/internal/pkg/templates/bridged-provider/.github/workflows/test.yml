# WARNING: This file is autogenerated - changes will be overwritten when regenerated by https://github.com/pulumi/ci-mgmt

name: "Test Provider"

on:
   workflow_call:
     inputs:
       version:
         required: true
         type: string
         description: Version of the provider to test

env:
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
#{{ .Config.Env | toYaml | indent 2 }}#

jobs:
  test:
    permissions:
      contents: read
      id-token: write
    runs-on: #{{ if .Config.Runner.BuildSDK }}##{{- .Config.Runner.BuildSdk }}##{{ else }}##{{- .Config.Runner.Default }}##{{ end }}#
    env:
      PROVIDER_VERSION: ${{ inputs.version }}
    steps:
#{{- if .Config.FreeDiskSpaceBeforeTest }}#
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: #{{ .Config.ActionVersions.FreeDiskSpace }}#
      with:
        tool-cache: false
        swap-storage: false
        dotnet: false
#{{- end }}#
    - name: Checkout Repo
      uses: #{{ .Config.ActionVersions.Checkout }}#
      with:
        ref: ${{ env.PR_COMMIT_SHA }}
        #{{- if .Config.CheckoutSubmodules }}#
        submodules: #{{ .Config.CheckoutSubmodules }}#
        #{{- end }}#
        persist-credentials: false
    - name: Checkout p/examples
      if: matrix.testTarget == 'pulumiExamples'
      uses: #{{ .Config.ActionVersions.Checkout }}#
      with:
        repository: pulumi/examples
        path: p-examples
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, ${{ matrix.language }}
    - name: Prepare local workspace
      run: make prepare_local_workspace
    - name: Download bin
      uses: ./.github/actions/download-bin
    - name: Download SDK
      uses: ./.github/actions/download-sdk
      with:
        language: ${{ matrix.language }}
    - name: Restore makefile progress
      run: make --touch provider schema build_${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      if: matrix.language == 'python'
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    #{{- if .Config.Docker }}#
    - name: Run docker compose
      run: docker compose -f testing/docker-compose.yml up --build -d
    #{{- end }}#
    #{{- if .Config.AWS }}#
    - name: Configure AWS Credentials
      uses: #{{ .Config.ActionVersions.ConfigureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: #{{ .Config.Provider }}#@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    #{{- end }}#
    #{{- if .Config.GCP }}#
    - name: Authenticate to Google Cloud
      uses: #{{ .Config.ActionVersions.GoogleAuth }}#
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: #{{ .Config.ActionVersions.SetupGcloud }}#
      with:
        install_components: gke-gcloud-auth-plugin
    #{{- end }}#
    #{{- if .Config.GCPRegistry }}#
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    #{{- end }}#
    #{{- if index .Config.SetupScript }}#
    - name: Run setup script
      run: #{{ index .Config.SetupScript }}#
    #{{- end }}#
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
#{{- if .Config.Actions.PreTest }}#
#{{ .Config.Actions.PreTest | toYaml | indent 4 }}#
#{{- end }}#
    #{{- if .Config.IntegrationTestProvider }}#
    - name: Run provider tests
      if: matrix.testTarget == 'local'
      working-directory: provider
      run: go test -v -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4 .
    #{{- end }}#
    - name: Run tests
      if: matrix.testTarget == 'local'
      run: cd examples && go test -v -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -skip TestPulumiExamples -parallel 4 .
    - name: Run pulumi/examples tests
      if: matrix.testTarget == 'pulumiExamples'
      run: cd examples && go test -v -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -run TestPulumiExamples -parallel 4 .
    strategy:
      fail-fast: false
      matrix:
        language:
#{{ .Config.Languages | toYaml | indent 8 }}#
        #{{- if .Config.TestPulumiExamples }}#
        testTarget: [local, pulumiExamples]
        #{{- else }}#
        testTarget: [local]
        #{{- end }}#
