name: "Test Provider"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: Version of the provider to test

jobs:
  # TODO: Extract into shared action.
  test:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    name: test
    permissions:
      contents: read
      id-token: write
    runs-on: #{{ if .Config.Runner.BuildSDK }}##{{- .Config.Runner.BuildSdk }}##{{ else }}##{{- .Config.Runner.Default }}##{{ end }}#
    env:
      PROVIDER_VERSION: ${{ inputs.version }}
    steps:
#{{- if .Config.FreeDiskSpaceBeforeTest }}#
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: #{{ .Config.ActionVersions.FreeDiskSpace }}#
      with:
        tool-cache: false
        swap-storage: false
        dotnet: false
#{{- end }}#
    - name: Checkout Repo
      uses: #{{ .Config.ActionVersions.Checkout }}#
      with:
        ref: ${{ env.PR_COMMIT_SHA }}
        #{{- if .Config.CheckoutSubmodules }}#
        submodules: #{{ .Config.CheckoutSubmodules }}#
        #{{- end }}#
        persist-credentials: false
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, go, nodejs, python, dotnet, java
    - name: Download bin
      uses: ./.github/actions/download-bin
    - name: Add NuGet source
      run: dotnet nuget add source ${{ github.workspace }}/nuget
    #{{- range $_, $language := .Config.Languages }}#
    - name: Download #{{ $language }}# SDK
      uses: ./.github/actions/download-sdk
      with:
        language: #{{ $language }}#
    #{{- end }}#
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    #{{- if .Config.Docker }}#
    - name: Run docker compose
      run: docker compose -f testing/docker-compose.yml up --build -d
    #{{- end }}#
    #{{- if .Config.AWS }}#
    - name: Configure AWS Credentials
      uses: #{{ .Config.ActionVersions.ConfigureAwsCredentials }}#
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: #{{ .Config.Provider }}#@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    #{{- end }}#
    #{{- if .Config.GCP }}#
    - name: Authenticate to Google Cloud
      uses: #{{ .Config.ActionVersions.GoogleAuth }}#
      with:
        service_account: ${{ env.GOOGLE_CI_SERVICE_ACCOUNT_EMAIL }}
        workload_identity_provider: projects/${{ env.GOOGLE_PROJECT_NUMBER
          }}/locations/global/workloadIdentityPools/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_POOL }}/providers/${{
          env.GOOGLE_CI_WORKLOAD_IDENTITY_PROVIDER }}
    - name: Setup gcloud auth
      uses: #{{ .Config.ActionVersions.SetupGcloud }}#
      with:
        install_components: gke-gcloud-auth-plugin
    #{{- end }}#
    #{{- if .Config.GCPRegistry }}#
    - name: Login to Google Cloud Registry
      run: gcloud --quiet auth configure-docker
    #{{- end }}#
    - name: Install dependencies
      run: make install_sdks

    # TODO: This should be a make target.
    - name: Generate shard
      id: shard
      uses: hashicorp-forge/go-test-split-action@v2.0.0
      with:
        working-directory: examples # TODO: Parameterize this.
        flags: -tags=all
        total: ${{ matrix.total }}
        index: ${{ matrix.index }}
    - name: Run example tests
      run: make test_shard
      env:
        TAGS: all
        TESTS: ${{ steps.shard.outputs.run}}
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        total:
        - #{{ .Config.Shards }}#
        index:
        #{{- range $i, $_ := until .Config.Shards }}#
        - #{{ $i }}#
        #{{- end }}#
