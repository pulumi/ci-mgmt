# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt

PACK := aws
ORG := pulumi
PROJECT := github.com/$(ORG)/pulumi-$(PACK)
PROVIDER_PATH := provider/v5
VERSION_PATH := $(PROVIDER_PATH)/pkg/version.Version
TFGEN := pulumi-tfgen-$(PACK)
PROVIDER := pulumi-resource-$(PACK)
JAVA_GEN_VERSION := v0.5.4
TESTPARALLELISM := 10
WORKING_DIR := $(shell pwd)
VERSION = $(shell pulumictl get version --language generic)
VERSION_DOTNET = $(shell pulumictl get version --language dotnet)
VERSION_JAVASCRIPT = $(shell pulumictl get version --language javascript)
VERSION_PYTHON = $(shell pulumictl get version --language python)

development: install_plugins provider build_sdks install_sdks

build: install_plugins provider build_sdks install_sdks

build_dotnet: bin/dotnet/.build.sentinel

build_go: sdk/go/.gen.sentinel

build_java: sdk/java/.build.sentinel

build_nodejs: sdk/nodejs/.build.sentinel

build_python: sdk/python/.build.sentinel

build_sdks: build_nodejs build_python build_go build_dotnet build_java

clean: 
	rm -rf sdk/{dotnet,nodejs,go,python}

cleanup: 
	rm -r bin
	rm -f provider/cmd/$(PROVIDER)/schema.go

help: 
	@grep '^[^.#]\+:\s\+.*#' Makefile | \
	sed "s/\(.\+\):\s*\(.*\) #\s*\(.*\)/`printf "\033[93m"`\1`printf "\033[0m"`	\3 [\2]/" | \
	expand -t20

install_dotnet_sdk: 
	mkdir -p nuget
	find sdk/dotnet -name '*.nupkg' -print -exec cp -p {} nuget \;

install_go_sdk: 

install_java_sdk: 

install_nodejs_sdk: 
	yarn link --cwd sdk/nodejs/bin

install_plugins: install_plugins.sentinel

install_python_sdk: 

install_sdks: install_dotnet_sdk install_python_sdk install_nodejs_sdk install_java_sdk install_go_sdk

lint_provider: bin/$(PROVIDER)
	cd provider && golangci-lint run -c ../.golangci.yml

provider: bin/$(PROVIDER)

test: 
	cd examples && go test -v -tags=all -parallel $(TESTPARALLELISM) -timeout 2h

tfgen: install_plugins.sentinel bin/$(TFGEN) provider/cmd/$(PROVIDER)/schema.json provider/cmd/$(PROVIDER)/.gen.sentinel

bin/$(PROVIDER): provider/cmd/$(PROVIDER)/.gen.sentinel install_plugins.sentinel
	(cd provider && go build -p 1 -o $(WORKING_DIR)/bin/$(PROVIDER) -ldflags "-X $(PROJECT)/$(VERSION_PATH)=$(VERSION) -X github.com/terraform-providers/terraform-provider-aws/version.ProviderVersion=$(VERSION)" $(PROJECT)/$(PROVIDER_PATH)/cmd/$(PROVIDER))

bin/$(TFGEN): 
	cd provider && \
		go build -p 1 -o $(WORKING_DIR)/bin/$(TFGEN) -ldflags "-X $(PROJECT)/$(VERSION_PATH)=$(VERSION)" $(PROJECT)/$(PROVIDER_PATH)/cmd/$(TFGEN)

bin/dotnet/.build.sentinel: bin/dotnet/.gen.sentinel
	cd sdk/dotnet/ && \
		dotnet build /p:Version=$(VERSION_DOTNET)
	@touch $@

bin/dotnet/.gen.sentinel: bin/$(TFGEN)
	bin/$(TFGEN) dotnet --overlays provider/overlays/dotnet --out sdk/dotnet/
	echo "module fake_dotnet_module // Exclude this directory from Go tools\n\ngo 1.17" > sdk/dotnet/go.mod
	echo "$(VERSION_DOTNET)" > sdk/dotnet/version.txt
	@touch $@

bin/pulumi-java-gen: 
	$(shell pulumictl download-binary -n pulumi-language-java -v $(JAVA_GEN_VERSION) -r pulumi/pulumi-java)

install_plugins.sentinel: 
	[ -x $(shell which pulumi) ] || curl -fsSL https://get.pulumi.com | sh
	pulumi plugin install resource tls 4.1.0
	pulumi plugin install resource github 4.10.0
	pulumi plugin install resource kubernetes 3.17.0
	pulumi plugin install resource random 4.8.2
	@touch $@

only_build: build

provider/cmd/$(PROVIDER)/.gen.sentinel: provider/cmd/$(PROVIDER)/schema.json
	cd provider && \
		VERSION=$(VERSION) go generate cmd/$(PROVIDER)/main.go
	@touch $@

provider/cmd/$(PROVIDER)/schema.json: bin/$(TFGEN) install_plugins.sentinel
	bin/$(TFGEN) schema --out provider/cmd/$(PROVIDER)

sdk/go/.gen.sentinel: bin/$(TFGEN)
	bin/$(TFGEN) go --overlays provider/overlays/go --out sdk/go/
	@touch $@

sdk/java/.build.sentinel: sdk/java/.gen.sentinel
	cd sdk/java && \
		gradle --console=plain build
	@touch $@

sdk/java/.gen.sentinel: bin/pulumi-java-gen
	bin/pulumi-java-gen generate --schema provider/cmd/$(PROVIDER)/schema.json --out sdk/java  --build gradle-nexus
	cd sdk/java && \
		echo "module fake_java_module // Exclude this directory from Go tools\n\ngo 1.17" > go.mod
	@touch $@

sdk/nodejs/.build.sentinel: sdk/nodejs/.gen.sentinel
	cd sdk/nodejs/ && \
		echo "module fake_nodejs_module // Exclude this directory from Go tools\n\ngo 1.17" > go.mod && \
		yarn install && \
		yarn run tsc && \
		cp ../../README.md ../../LICENSE* package.json yarn.lock ./bin/ && \
		sed -i.bak -e "s/\$${VERSION}/$(VERSION_JAVASCRIPT)/g" ./bin/package.json
	@touch $@

sdk/nodejs/.gen.sentinel: bin/$(TFGEN) $(shell find provider/overlays/nodejs -type f)
	bin/$(TFGEN) nodejs --overlays provider/overlays/nodejs --out sdk/nodejs/
	@touch $@

sdk/python/.build.sentinel: sdk/python/.gen.sentinel
	cd sdk/python/ && \
		echo "module fake_python_module // Exclude this directory from Go tools\n\ngo 1.17" > go.mod && \
		cp ../../README.md . && \
		python3 setup.py clean --all 2>/dev/null && \
		rm -rf ./bin/ ../python.bin/ && cp -R . ../python.bin && mv ../python.bin ./bin && \
		sed -i.bak -e 's/^VERSION = .*/VERSION = "$(VERSION_PYTHON)"/g' -e 's/^PLUGIN_VERSION = .*/PLUGIN_VERSION = "$(VERSION_PYTHON)"/g' ./bin/setup.py && \
		rm ./bin/setup.py.bak && rm ./bin/go.mod && \
		cd ./bin && python3 setup.py build sdist
	@touch $@

sdk/python/.gen.sentinel: bin/$(TFGEN)
	bin/$(TFGEN) python --overlays provider/overlays/python --out sdk/python/
	@touch $@

.PHONY: development build build_dotnet build_go build_java build_nodejs build_python build_sdks clean cleanup help install_dotnet_sdk install_go_sdk install_java_sdk install_nodejs_sdk install_plugins install_python_sdk install_sdks lint_provider provider test tfgen